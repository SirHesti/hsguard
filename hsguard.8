'\" t
.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "hsguard" "8" "17.06.2025" "hsguard 2.24.59 Beta" "hsguard - coded by Hesti"
.hy
.SH NAME
.PP
\f[B]hsguard\f[R] - Program to detect changes in the file system
.SH SYNOPSIS
.PP
hsguard creates a database from the configurable directories.
Each file is checked individually and a CRC checksum (OLDSTYLE) is
generated.
Once the hard drive is included in the database every file can be
checked for (unwanted) changes.
.PP
This is precisely the purpose of hsguard.
Hard drives (HDDs) age and if data is not read the drive may
\[lq]forget\[rq] a bit.
.PP
I have HDDs running around the clock as backup systems, local file
sharing, etc.
I want to keep the data on these drives for many years.
.PP
Additionally, this makes it possible to detect if malware is in the
process of encrypting all your data.
.PP
This is where \[lq]hsguard\[rq] comes in.
hsguard stores all important information about a file.
A file that has been changed is normally updated in the database.
A CRC32 is calculated for each file.
The checksum is saved per file and can be checked against.
.PP
Position, name, file size, file modification date, and the CRC32 are
stored.
Check counters and the date of inclusion can also be retrieved from the
database.
.PP
In a cron job, hsguard [\[en]update] \[en]check can be called, where
different files can then be checked.
These are selected at random.
An update adds new or changed files beforehand.
.PP
With many options, the data can be listed and verified.
Thus, in case of an incident, the database will be a helpful supplement.
.PP
IMPORTANT!
hsguard will not modify the contents of any hard drive.
It will not delete or add any files.
The only exception is the database itself.
\[lq]hsguard \[en]create\[rq] will, once, create a hsguard.rc.
This file will not be overwritten.
However, all parameters can also be specified on the command line.
.PP
hsguard only requires read access to the data.
.PP
hsguard can be configured in many ways: config file, exclude file, and
command-line switches.
.PP
If hsguard is started for the first time, it will complain that the file
/etc/hsguard.rc is missing.
With \[lq]hsguard \[en]create\[rq], an initial version can be created,
along with a subdirectory /var/hsguard.
An example can be found in the file hsguard_sample.rc.
.SH DESCRIPTION
.PP
hsguard reads the file system and stores basic data.
If a file is not present or has changed (fsize/mtime), a CRC32 checksum
is generated for the file.
This checksum is checked and an alert is triggered if necessary.
.SH OPTIONS
.IP \[bu] 2
\f[B]--help -?
-h \f[R]
.RS 2
.RS
Print this helpmsg
.RE
.RE
.IP \[bu] 2
\f[B]-d --db sqlite3.db \f[R]
.RS 2
.RS
use this \[lq][PATH/]sqlite3.db\[rq] database \f[B]overwrite:
RCdatabase\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]-b --base <dir> \f[R]
.RS 2
.RS
basedir for all operations \f[B]overwrite RCbase\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]--create \f[R]
.RS 2
.RS
create an empty ConfigFile highcommand to edit this
.RE
.RE
.IP \[bu] 2
\f[B]--initdb \f[R]
.RS 2
.RS
create an empty Database
.RE
.RE
.IP \[bu] 2
\f[B]--createExcl \f[R]
.RS 2
.RS
create an example excludefile
.RE
.RE
.IP \[bu] 2
\f[B]-x --exclude <file> \f[R]
.RS 2
.RS
read a list of excluded files -- `#' comment ## \f[B]add this list:
RCexclude\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]--exclude_add <file> \f[R]
.RS 2
.RS
add a single file/dir to excludelist \f[B]works too: RCexadd\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]--ldir/--edir <dir> \f[R]
.RS 2
.RS
an LS for exclude file writers (NO Function on DB)
.RE
.RE
.IP \[bu] 2
\f[B]--update_deep <num> \f[R]
.RS 2
.RS
update database only this deep (update will set)
.RE
.RE
.IP \[bu] 2
\f[B]--update_dir <dir> \f[R]
.RS 2
.RS
update from here into database (update will set)
.RE
.RE
.IP \[bu] 2
\f[B]-u --update \f[R]
.RS 2
.RS
update database
.RE
.RE
.IP \[bu] 2
\f[B]--rescan \f[R]
.RS 2
.RS
update all, but reread crc32
.RE
.RE
.IP \[bu] 2
\f[B]-n --nodirtest \f[R]
.RS 2
.RS
update will \f[I]not\f[R] scan for empty dirs otherwise no exists
.PD 0
.P
.PD
dirs(and entries) will remove from database
.RE
.RE
.IP \[bu] 2
\f[B]--yes \f[R]
.RS 2
.RS
don\[cq]t ask me; i answer yes
.RE
.RE
.IP \[bu] 2
\f[B]-v --verbose \f[R]
.RS 2
.RS
use\ \ \ -v=1 to silence, also use -v- ** overwrite RCverbose**
.PD 0
.P
.PD
\ \ \ \ \ \ -v=2 erros(default) -v FAIL is the same
.PD 0
.P
.PD
\ \ \ \ \ \ -v=3 (same -v) userinfo
.PD 0
.P
.PD
\ \ \ \ \ \ -vv\ \ -v=4 info
.PD 0
.P
.PD
\ \ \ \ \ \ -vvv -v=5 developer
.RE
.RE
.IP \[bu] 2
\f[B]-s --noscreen \f[R]
.RS 2
.RS
In case of UserCMD\[cq]s like `--list' make screen for output.
.PD 0
.P
.PD
all UserMsg are saved only in the log.
to turn off noscreen use -s- \f[B]overwrite RCnoscreen\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]-a --ansi on/off/-/+ \f[R]
.RS 2
.RS
Ansicolor at find/info/list -a- off -a=On or only -a is on
.PD 0
.P
.PD
colors can be tuned in the config file \f[B]overwrite: RCansicolor\f[R]
.RE
.RE
.IP \[bu] 2
\f[B]-l --list \f[R]
.RS 2
.RS
print out database contens
.RE
.RE
.IP \[bu] 2
\f[B]--listdir \f[R]
.RS 2
.RS
print only dirs from database see: --recursive
.RE
.RE
.IP \[bu] 2
\f[B]-f --formout \f[R]
.RS 2
.RS
Format Out to UserLevel
.PD 0
.P
.PD
Singleline :ONELINE, LONGLINE, MAXLINE
.PD 0
.P
.PD
Multiline: :MINI, BASIC, MEDIUM, ALL
.RE
.RE
.IP \[bu] 2
\f[B]-r --recursive \f[R]
.RS 2
.RS
list subdirs too \f[I]-r=deep\f[R] can go deeper \f[I]`-r'\f[R] lists
everything
.RE
.RE
.IP \[bu] 2
\f[B]-i --info <dir>or<path>or\[at]<id> \f[R]
.RS 2
.RS
Info about file in path <entrie> in database
.PD 0
.P
.PD
path like /name/too
.PD 0
.P
.PD
path without starting `/' will find with \[cq]*\[cq] case intensive
.RE
.RE
.IP \[bu] 2
\f[B]--find \f[R]
.RS 2
.RS
same as info, but finddir is not implemented
.RE
.RE
.IP \[bu] 2
\f[B]--infodir <dir>or\[at]<id> \f[R]
.RS 2
.RS
Info about file in dir <places> in database
.RE
.RE
.IP \[bu] 2
\f[B]--remove <dir>or<path> \f[R]
.RS 2
.RS
remove entrie or a complete path(include entries/subdirs) from DB
.PD 0
.P
.PD
you must confirmed (Y/N) (or use --yes)
.RE
.RE
.IP \[bu] 2
\f[B]--finddupes <dir> \f[R]
.RS 2
.RS
find dupes beginn at <dir> or start in base.
This can take a while
.RE
.RE
.IP \[bu] 2
\f[B]-t --testdb [OPTIONS] \f[R]
.RS 2
.RS
\f[I]OPTIONS\f[R] are [r],count,[size],[path], where\&...
.PD 0
.P
.PD
\f[I][r]\f[R]\ \ \ \ optional will activate the random Mode *
.PD 0
.P
.PD
\f[I]count\f[R]\ \ of Files that will checked
.PD 0
.P
.PD
\f[I][size]\f[R] optional size that will never reached.
You can use 10TB or 500k
.PD 0
.P
.PD
\f[I][path]\f[R] optional, if not set then start check from BASE
.PD 0
.P
.PD
.IP \[bu] 2
if no random activated, then oldest (from lastchk) will checked
.RS 2
.RE
.RE
.RE
.IP \[bu] 2
\f[B]-e --emergency [OPTIONS] \f[R]
.RS 2
.RS
PANIC,ABORT=<errorlevel>,SKIP,COUNT=<num>,UPDATE,UPDATEALL
\f[B]overwrite: RCemergency\f[R]
.PD 0
.P
.PD
\f[I]PANIC\f[R]\ \ \ \ \ \ \ \ : Abort all, use Errorlevel 99 to exit
.PD 0
.P
.PD
\f[I]ABORT\f[R][=<el>] : Abort with Errorlevel 1, if <el>(2-98) is set,
then el is use
.PD 0
.P
.PD
\f[I]SKIP\f[R]\ \ \ \ \ \ \ \ \ : Skip this to COUNT, then abort
.PD 0
.P
.PD
\f[I]COUNT\f[R]=<num>\ \ : Skip not forever, only for this <num>
.PD 0
.P
.PD
\f[I]UPDATE\f[R]\ \ \ \ \ \ \ : Update lastchk and chkcount in DB
.PD 0
.P
.PD
\f[I]UPDATEALL\f[R]\ \ \ \ : Update size,fmtime,crc32 as found too
.RE
.RE
.IP \[bu] 2
\f[B]--wbs <size> \f[R]
.RS 2
.RS
Warning big size Files default is 16GB \f[B]overwrite:
RCwarnbigsize\f[R]
.RE
.RE
.SH ENVIRONMENT
.PP
see section: \f[B]hsguard.rc\f[R]
.PP
.SH /etc/hsguard.rc
.PP
.SS DATABASE=
.PP
The database itself.
This can usefully be located under /var.
Together with \[en]initDB, this can be created as a basic configuration.
For this, it must have read/write permissions.
\f[I]--db overrides the file specified in the RC file\f[R]
.PP
.SS BASE=
.PP
BASE for everything specified.
Where should the database be created from?
This line should definitely be adjusted.
For example, the path to the data to be protected could be
/server/pictures or similar.
\f[I]-b overrides this\f[R]
.PP
.SS VERBOSE=
.PP
Represents the log level.
The higher the level, the more information about the tasks performed can
be found in the log file or on the screen.
More finely tuned via the special switch \f[I]\[en]noscreen\f[R] .
.PP
Verbosity levels are supported from 0-4 or better:
.IP \[bu] 2
\f[V]ROOT  0 :\f[R] Only system errors
.IP \[bu] 2
\f[V]FAIL  1 :\f[R] Only messages that include errors
.IP \[bu] 2
\f[V]USER  2 :\f[R] Default setting.
Information about the start and end of each action is output
.IP \[bu] 2
\f[V]INFO  3 :\f[R] This can be a lot of messages
.IP \[bu] 2
\f[V]DEVL  4 :\f[R] Better not to look at this\[em]intended only for
developers
.PP
.SS EXCLUDE=
.PP
There are folders that do not need to be searched, e.g., temp folders or
the folder of this database.
The files/directories are listed line by line, and with `?' and
\[cq]*\[cq] you can exclude multiple items.
A `#' at the beginning of a line is a comment.
More on this topic \f[B]under: Exclude-File\f[R]
.PP
.SS NOSCREEN=
.PP
Can be Y/N.
If Y, almost all output is only written to the log file and no longer
displayed on the screen.
Messages are only available in the log file.
-s- on the command line can disable this behavior, even if NOSCREEN=Y is
specified.
It is recommended to comment out this line when setting up.
.PP
.SS EMERGENCY=
.PP
Here you specify how \[en]testDB should handle errors, including their
repetition.
The PANIC option is expressly recommended.
.IP \[bu] 2
\f[V]PANIC     :\f[R] Immediate abort.
Program ends with error level 99
.IP \[bu] 2
\f[V]COUNT=    :\f[R] The specified number of errors is counted.
STOP at 0
.IP \[bu] 2
\f[V]SKIP      :\f[R] Checked, but no further action is taken
.IP \[bu] 2
\f[V]ABORT     :\f[R] Ends \[lq]normally\[rq] with error level 1.
COUNT!
.IP \[bu] 2
\f[V]UPDATE    :\f[R] Even in case of errors, the lastchk date is
updated
.IP \[bu] 2
\f[V]UPDATEALL :\f[R] As above, but also updates new size, CRC, FMTime
.PP
\f[I]-e or \[en]emergency can override these settings\f[R]
.PP
.SS ANSICOLOR=
.PP
Many outputs are color-coded for better distinction.
Y/N can disable the output of ANSI colors.
If Y, colors can also be varied further.
These can be viewed in the sample file.
.PP
.SS EXADD=
.PP
Here you can ignore a file or even a directory.
It\[cq]s much better to use RCexclude.
.PP
.SS WARNWBS
.PP
This parameter triggers a \[lq]warning\[rq] when a \[lq]large file\[rq]
is detected.
This can be useful if the files to be checked are not connected via the
fastest connection.
To prevent the cursor from appearing frozen while waiting, a file size
can be set here.
The warning is issued at user level.
Specify in human-readable format like 1TB or 10MB.
Set to 0 to disable this behavior.
.PP
Default value is 16GB.
.PP
.SS FORWARD
.PP
This can be used once to refer to another config.
This is useful if you can refer to other configs (e.g., on the network).
As a feature, the section can be specified directly.
This might look like:
.IP
.nf
\f[C]
FORWARD=/srv/pub/backup.rc,std
\f[R]
.fi
.PP
.SS Exclude Files
.PP
There are many good reasons to exclude certain files or entire directory
trees.
This can be done very simply with a single file in the exclude file.
A comment begins with a `#'.
Everything following is a comment.
.PP
Multiple files can each be added individually or captured using the
built-in file globbing.
This works for files that `ls' would find, like \[cq]ls
/var/log/*.log\[cq].
.PP
Additionally, there are some keywords that exclude something if a
certain situation applies.
For example:
.IP
.nf
\f[C]
ifhost WKST-Conny /etc/pconly.rc
\f[R]
.fi
.PP
With each new line, the situation is re-evaluated.
That is, no multi-line blocks.
However, the `situation evaluations' can be nested arbitrarily deep.
The following can be used in this way:
.IP
.nf
\f[C]
ifhost WKST-Conny ifuser werner message \[dq]Don\[aq]t break anything on Conny\[aq]s PC\[dq]
\f[R]
.fi
.PP
.TS
tab(@);
r l.
T{
token
T}@T{
Description
T}
_
T{
ifhost X
T}@T{
If the current PC is X
T}
T{
ifnhost X
T}@T{
If the current PC is not X
T}
T{
ifuser X
T}@T{
If the current user is X
T}
T{
ifnuser X
T}@T{
If the current user is not X
T}
T{
ifbase X
T}@T{
BASE=X (-b=X)
T}
T{
ifnbase X
T}@T{
if BASE does not apply
T}
T{
include X
T}@T{
Include X.
Read file X at this point
T}
T{
message X
T}@T{
Output this message
T}
.TE
.SH AUTHORS
.PP
Heiko Stoevesandt - alias Hesti - <hstools@t-online.de>
.SH BUGS
.PP
Please report bugs (including in this manpage)
